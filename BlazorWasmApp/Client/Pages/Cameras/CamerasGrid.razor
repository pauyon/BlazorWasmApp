@page "/cameras"
@using BlazorWasmApp.Client.Services.CameraService
@using BlazorWasmApp.Shared.Domain.Entities

@inject ICameraService CameraService
@inject NavigationManager NavigaitonManager

<PageTitle>Cameras</PageTitle>

<MudText Typo="Typo.h3">Cameras</MudText>

@if (cameras == null)
{
    <MudProgressCircular Indeterminate="true">Loading...</MudProgressCircular>
}
else
{
    <MudDataGrid Items="@cameras" Striped>
        <Columns>
            <PropertyColumn Property="x => x.Make" Title="Make" />
            <PropertyColumn Property="x => x.Model" Title="Model" />
            <PropertyColumn Property="x => x.Serial" Title="Serial" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                        <MudButton OnClick="@(() => RedirectToDetails(context.Item))" Variant="@Variant.Filled" Color="@Color.Primary">Edit</MudButton>
                        <MudButton OnClick="@(() => DeleteRecord(context.Item))" Variant="@Variant.Filled" Color="@Color.Error">Delete</MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    private List<Camera> cameras;

    protected override async Task OnInitializedAsync()
    {
        cameras = await CameraService.GetAll();
    }

    protected void RedirectToDetails(Camera camera)
    {
        NavigaitonManager.NavigateTo($"/camera/{camera.Id}");
    }

    protected async Task DeleteRecord(Camera camera)
    {
    }
}