@page "/fetchdata"
@attribute [Authorize(Roles = "Administrator")]

@using BlazorWasmApp.Shared
@using System.Net.Http.Headers
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3">Weather forecast</MudText>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <MudProgressCircular Indeterminate="true">Loading...</MudProgressCircular>
}
else
{
    <MudDataGrid Items="@forecasts.Take(4)" Striped>
        <Columns>
            <PropertyColumn Property="x => x.Date.ToShortDateString()" Title="Date" />
            <PropertyColumn Property="x => x.TemperatureC" Title="Temp. (C)" />
            <PropertyColumn Property="x => x.TemperatureF" Title="Temp. (F)" />
            <PropertyColumn Property="x => x.Summary" Title="Summary" />
        </Columns>
    </MudDataGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        var token = await customAuthStateProvider.GetToken();

        if (!string.IsNullOrWhiteSpace(token))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        }
        else
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}
